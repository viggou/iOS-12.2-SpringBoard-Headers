//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "BSDebugDescriptionProviding-Protocol.h"
#import "CoreTelephonyClientCarrierBundleDelegate-Protocol.h"
#import "CoreTelephonyClientDataDelegate-Protocol.h"
#import "CoreTelephonyClientDelegate-Protocol.h"
#import "CoreTelephonyClientRegistrationDelegate-Protocol.h"
#import "CoreTelephonyClientSubscriberDelegate-Protocol.h"
#import "SBAirplaneModeDelegate-Protocol.h"

@class CoreTelephonyClient, NSArray, NSString, NWSystemPathMonitor, SBAirplaneModeController, SBAlertItem, SBTelephonySubscriptionContext, TUCall;
@protocol OS_dispatch_queue;

@interface SBTelephonyManager : NSObject <SBAirplaneModeDelegate, BSDebugDescriptionProviding, CoreTelephonyClientDelegate, CoreTelephonyClientRegistrationDelegate, CoreTelephonyClientSubscriberDelegate, CoreTelephonyClientDataDelegate, CoreTelephonyClientCarrierBundleDelegate>
{
    struct __CTServerConnection *_serverConnection;
    _Bool _containsCellularRadio;
    _Bool _hasCellularTelephony;
    _Bool _hasCellularData;
    unsigned int _usingWifi:1;
    unsigned int _usingVPN:1;
    NSObject<OS_dispatch_queue> *_wirelessModemDynamicStoreQueue;
    struct __SCDynamicStore *_queue_wirelessModemDynamicStore;
    struct __CFString *_queue_wirelessModemDynamicStoreSharingKey;
    _Bool _isNetworkTethering;
    int _numberOfNetworkTetheredDevices;
    unsigned int _hasShownWaitingAlert:1;
    SBAlertItem *_activationAlertItem;
    int _numActivationFailures;
    int _inEmergencyCallbackMode;
    unsigned int _loggingCallAudio:1;
    SBAirplaneModeController *_airplaneModeController;
    int _needsUserIdentificationModule;
    int _suppressesCellDataIndicator;
    int _suppressesCellIndicators;
    _Bool _fallingBackToCellular;
    struct tcp_connection_fallback_watch_s *_cellularFallbackWatcher;
    void *_queue_fastDormancySuspendAssertion;
    NWSystemPathMonitor *_systemPathMonitor;
    _Bool _radioModuleDead;
    _Bool _dualSIMEnabled;
    TUCall *_incomingCall;
    TUCall *_activeCall;
    TUCall *_heldCall;
    TUCall *_outgoingCall;
    CoreTelephonyClient *_coreTelephonyClient;
    SBTelephonySubscriptionContext *_subscriptionContext;
    SBTelephonySubscriptionContext *_slot2SubscriptionContext;
    NSArray *_cachedCTContexts;
}

+ (id)sharedTelephonyManagerCreatingIfNecessary:(_Bool)arg1;
+ (id)sharedTelephonyManager;
+ (struct __CTServerConnection *)defaultTelephonyCenter;
@property(copy, nonatomic) NSArray *cachedCTContexts; // @synthesize cachedCTContexts=_cachedCTContexts;
@property(retain, nonatomic) SBTelephonySubscriptionContext *slot2SubscriptionContext; // @synthesize slot2SubscriptionContext=_slot2SubscriptionContext;
@property(nonatomic, getter=isDualSIMEnabled) _Bool dualSIMEnabled; // @synthesize dualSIMEnabled=_dualSIMEnabled;
@property(retain, nonatomic) SBTelephonySubscriptionContext *subscriptionContext; // @synthesize subscriptionContext=_subscriptionContext;
@property(retain, nonatomic) CoreTelephonyClient *coreTelephonyClient; // @synthesize coreTelephonyClient=_coreTelephonyClient;
@property(retain, nonatomic) TUCall *outgoingCall; // @synthesize outgoingCall=_outgoingCall;
@property(retain, nonatomic) TUCall *heldCall; // @synthesize heldCall=_heldCall;
@property(retain, nonatomic) TUCall *activeCall; // @synthesize activeCall=_activeCall;
@property(retain, nonatomic) TUCall *incomingCall; // @synthesize incomingCall=_incomingCall;
@property(nonatomic, getter=isRadioModuleDead) _Bool radioModuleDead; // @synthesize radioModuleDead=_radioModuleDead;
- (void).cxx_destruct;
- (void)preHeatDataLinkForDomains:(id)arg1;
- (void)_setIsNetworkTethering:(_Bool)arg1 withNumberOfDevices:(int)arg2;
- (int)numberOfNetworkTetheredDevices;
- (_Bool)isNetworkTethering;
- (void)_queue_noteWirelessModemDynamicStoreChanged;
- (_Bool)needsUserIdentificationModule;
- (id)debugDescriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)debugDescriptionWithMultilinePrefix:(id)arg1;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)_updateCallForwardingIndicatorForContext:(id)arg1;
- (void)_setCallForwardingIndicator:(unsigned long long)arg1 inSubscriptionContext:(id)arg2;
- (void)suppServicesError:(id)arg1 error:(id)arg2;
- (void)suppServicesCompleted:(id)arg1;
- (void)suppServicesEvent:(id)arg1 event:(int)arg2 settingsType:(int)arg3 data:(id)arg4;
- (void)suppServicesStarted:(id)arg1;
- (void)operatorBundleChange:(id)arg1;
- (void)_setCarrierBundleInfo:(id)arg1 inSubscriptionContext:(id)arg2;
- (id)_backgroundQueryQueue_carrierBundleInfoForCTContext:(id)arg1;
- (void)carrierBundleChange:(id)arg1;
- (void)smsMessageClass0Received:(id)arg1 body:(id)arg2 address:(id)arg3;
- (void)_updateDataConnectionTypeForContext:(id)arg1;
- (void)_updateDataConnectionType;
- (unsigned long long)dataConnectionType;
- (void)_updateDataStatus:(id)arg1 inSubscriptionContext:(id)arg2;
- (void)dataStatus:(id)arg1 dataStatusInfo:(id)arg2;
- (void)_updateDataConnectedSubscriptionContextForCTContext:(id)arg1;
- (void)currentDataSimChanged:(id)arg1;
- (void)preferredDataSimChanged:(id)arg1;
- (void)servingNetworkChanged:(id)arg1;
- (void)_setSIMStatus:(id)arg1 inSubscriptionContext:(id)arg2;
- (void)simStatusDidChange:(id)arg1 status:(id)arg2;
- (void)_setRegistrationRejectionCauseCode:(long long)arg1 inContext:(id)arg2;
- (void)rejectCauseCodeChanged:(id)arg1 causeCode:(id)arg2;
- (void)_setNetworkReselectionNeeded:(_Bool)arg1 inContext:(id)arg2 withCTContext:(id)arg3;
- (void)_handleNetworkReselectionNeeded:(_Bool)arg1 forCTContext:(id)arg2;
- (void)networkSelected:(id)arg1 success:(_Bool)arg2 mode:(id)arg3;
- (void)networkReselectionNeeded:(id)arg1;
- (void)_handleCellChangedForContext:(id)arg1 withCTContext:(id)arg2;
- (void)cellChanged:(id)arg1 cell:(id)arg2;
- (unsigned long long)registrationStatus;
- (void)_stopFakeCellServiceForContext:(id)arg1;
- (void)_stopFakeCellService:(id)arg1;
- (void)_cancelFakeCellServiceTimerForContext:(id)arg1;
- (void)_updateRegistrationNowInSubscriptionContext:(id)arg1;
- (void)_setRegistrationStatus:(unsigned long long)arg1 inSubscriptionContext:(id)arg2;
- (void)_setCellRegistrationStatus:(unsigned long long)arg1 inSubscriptionContext:(id)arg2;
- (void)_setCachedCTRegistrationCellStatus:(id)arg1 displayStatus:(id)arg2 forcedHome:(_Bool)arg3 inSubscriptionContext:(id)arg4;
- (void)setCellStatus:(id)arg1 displayStatus:(id)arg2 forcedHome:(_Bool)arg3 changeCausedBySIMRemoval:(_Bool)arg4 inSubscriptionContext:(id)arg5 withCTContext:(id)arg6;
- (void)displayStatusChanged:(id)arg1 status:(id)arg2;
- (id)_carrierNameForOperatorName:(id)arg1 withContext:(id)arg2;
- (void)_cancelFakeServiceTimerForContext:(id)arg1;
- (void)_stopFakeServiceForContext:(id)arg1;
- (void)_stopFakeService:(id)arg1;
- (void)_startFakeServiceIfNecessaryForContext:(id)arg1;
- (void)_reallySetOperatorName:(id)arg1 inSubscriptionContext:(id)arg2;
- (void)_setOperatorName:(id)arg1 inSubscriptionContext:(id)arg2;
- (void)operatorNameChanged:(id)arg1 name:(id)arg2;
- (unsigned long long)maxSignalStrengthBars;
- (void)_setSignalStrengthBars:(unsigned long long)arg1 maxBars:(unsigned long long)arg2 inSubscriptionContext:(id)arg3;
- (void)signalStrengthChanged:(id)arg1 info:(id)arg2;
- (id)_subscriptionContextForCTContext:(id)arg1;
- (void)_updateDualSIMCapabilitySendingNotification:(_Bool)arg1;
- (void)dualSimCapabilityDidChange;
- (void)_queryCallForwardingStateForCTContext:(id)arg1;
- (void)_queryRegistrationStatusForCTContext:(id)arg1;
- (void)_querySubscriptionStateForCTContext:(id)arg1;
- (void)_applyInfoNotRequiringSIMFromContext:(id)arg1 toContext:(id)arg2;
- (id)_backgroundQueryQueue_shortSIMLabelForCTContext:(id)arg1;
- (id)_backgroundQueryQueue_SIMStatusForCTContext:(id)arg1;
- (id)_backgroundQueryQueue_mobileEquipmentInfoForCTContext:(id)arg1;
- (id)_backgroundQueryQueue_subscriptionContextWithInfoNotRequiringSIMForCTContext:(id)arg1;
- (void)subscriptionInfoDidChange;
- (id)carrierDisabledApplicationIDs;
- (long long)_subscriptionSlotForContext:(id)arg1;
- (void)_logSubscriptionEvent:(id)arg1 forContext:(id)arg2;
- (void)_logSubscriptionEvent:(id)arg1 forCTContext:(id)arg2;
- (void)_logSubscriptionEvent:(id)arg1;
- (_Bool)_hasCTContextForSlot:(long long)arg1;
- (id)_slot2SubscriptionContextIfSIMPresent;
- (id)_slot1SubscriptionContextIfSIMPresent;
- (id)_subscriptionContextForSlot:(long long)arg1;
- (id)_anySubscriptionContextWithSIMPresent;
- (id)_dataConnectedSubscriptionContext;
- (id)_dataPreferredSubscriptionContextIfSIMPresent;
- (id)_otherSubscriptionContextIfSIMPresent:(id)arg1;
- (id)_secondarySubscriptionContext;
- (id)_primarySubscriptionContext;
@property(retain, nonatomic) SBTelephonySubscriptionContext *slot1SubscriptionContext;
- (id)mobileEquipmentInfoForSlot:(long long)arg1;
- (id)carrierBundleInfoForSlot:(long long)arg1;
- (id)subscriptionInfoForSlot:(long long)arg1;
- (id)secondaryMobileEquipmentInfo;
- (id)secondaryCarrierBundleInfo;
- (id)secondarySubscriptionInfo;
- (id)mobileEquipmentInfo;
- (id)carrierBundleInfo;
- (id)subscriptionInfo;
- (void)postponementStatusChanged;
- (void)_setIsInEmergencyCallbackMode:(unsigned char)arg1;
- (_Bool)isInEmergencyCallbackMode;
- (_Bool)isEmergencyCallActive;
- (void)_provisioningUpdateWithStatus:(int)arg1 slot:(long long)arg2;
- (void)_setCurrentActivationAlertItem:(id)arg1;
- (_Bool)isUsingVPNConnection;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_setIsUsingWiFiConnection:(_Bool)arg1;
- (_Bool)isTTYEnabled;
- (_Bool)isUsingSlowDataConnection;
- (_Bool)cellularRadioCapabilityIsActive;
- (void)_setSuppressesCellIndicators:(int)arg1;
- (void)_setSuppressesCellDataIndicator:(int)arg1;
- (void)_updateWifiState;
- (_Bool)_suppressesCellDataIndicator;
- (void)setNetworkRegistrationEnabled:(_Bool)arg1;
- (_Bool)isNetworkRegistrationEnabled;
- (void)dumpBasebandState:(id)arg1;
- (void)disconnectCallAndActivateHeld;
- (void)disconnectAllCalls;
- (void)swapCalls;
- (void)disconnectDisplayedCall;
- (void)disconnectIncomingCall;
- (_Bool)isEndpointOnCurrentDevice;
- (_Bool)inCall;
- (unsigned long long)faceTimeAudioCallCount;
- (unsigned long long)telephonyCallCount;
- (unsigned long long)_callCountForService:(int)arg1;
- (id)_callsForService:(int)arg1;
- (id)_ctContextForCall:(id)arg1;
@property(nonatomic, getter=isCellDataSwitchingEnabled) _Bool cellDataSwitchingEnabled;
@property(readonly, nonatomic) unsigned long long dataConnectionAvailabilityWithCurrentCalls;
- (_Bool)inCallUsingSpeakerOrReceiver;
- (_Bool)multipleCallsExist;
- (_Bool)outgoingCallExists;
- (_Bool)incomingCallExists;
- (_Bool)heldCallExists;
- (_Bool)activeCallExists;
- (id)displayedCall;
- (void)telephonyAudioChangeHandler;
- (unsigned long long)callCount;
- (void)callEventHandler:(id)arg1;
- (void)handleCallControlFailure:(id)arg1;
- (void)_updateLastKnownNetworkCountryCodeInContext:(id)arg1 withCTContext:(id)arg2;
- (void)_updateNetworkLocale;
- (_Bool)updateLocale;
- (void)_purgeSlot2SubscriptionState;
- (void)_purgeSlot1SubscriptionState;
- (void)_purgeSubscriptionState;
- (id)_newSubscriptionContext;
- (void)_updateState;
- (void)updateCalls;
- (void)airplaneModeDidChange:(_Bool)arg1;
- (void)setFastDormancySuspended:(_Bool)arg1;
- (void)queue_setFastDormancySuspended:(_Bool)arg1 withConnection:(struct __CTServerConnection *)arg2;
- (id)_phoneApp;
- (void)updateSpringBoard;
- (double)inCallDuration;
- (_Bool)emergencyCallSupported;
- (_Bool)hasCellularData;
- (_Bool)hasCellularTelephony;
- (_Bool)containsCellularRadio;
- (void)_handleTelephonyDaemonRestart;
- (void)_serverConnectionDidError:(CDStruct_1ef3fb1f)arg1;
- (void)_avSystemControllerDidError:(id)arg1;
- (struct __CTServerConnection *)_serverConnection;
- (void)_performQueryInBackground:(CDUnknownBlockType)arg1 withMainQueueResultHandler:(CDUnknownBlockType)arg2;
- (id)_backgroundQueryQueue;
- (void)_postStartupNotification;
- (id)init;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

